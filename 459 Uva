#include<iostream>
#include<stdio.h>
#include<vector>
#include<string>
#include<cstdlib>
#include<cstdlib>
#include<stdlib.h>
#include<algorithm>
#include<queue>
#include<math.h>
#include<stack>
#include<set>
#include<map>
#include<sstream>
#include<fstream>
using namespace std;
int p[10000000];
void init(int n)
{
    for(int i=1;i<=n;i++)
    {
        p[i]=i;
    }
}
int findx(int x)
{
    if(p[x]==x)
    {
        return x;
    }
    return p[x]=findx(p[x]);
}
bool sameset(int a,int b)
{
    if(findx(a)==findx(b))
    {
        return true;
    }
    return false;
}
void unir(int a,int b)
{
    a=findx(a);
    b=findx(b);
    if(a!=b)
    {
        p[a]=b;
    }
}
int main()
{
    int n;
    cin>>n;
    for(int i=0;i<n;i++)
    {
        char a;
        cin>>a;
        int cant=((int)a-64);
        init(28);
        string caso;
        //scanf("\n");
        //scanf("\n");
        getline(cin,caso);
        //if(caso.empty())cout<<"lol"<<endl;
        //scanf("\n");
        //cout<<"caso : "<<caso<<endl;
        do
        {
            getline(cin,caso);
            if (caso.empty()||caso=="\n")
            {
                break;
            }
            else
            {
                int pos1=(int)caso[0]-64;
                int pos2=(int)caso[1]-64;
                //cout<<"uniendo "<<pos1<<" "<<pos2<<endl;
                unir(pos1,pos2);
                //for(int i=1;i<=cant;i++)
                //{
                  //  cout<<p[i]<<" ";
                //}
                //cout<<endl;
            }
            //scanf("\n");
        }while(true);
        set<int> s;
        for(int j=1;j<=cant;j++)
        {
            p[j]=findx(j);
            s.insert(p[j]);
        }
        if(i==n-1)
        {
            cout<<s.size()<<endl;
        }
        else
        {
            cout<<s.size()<<endl<<endl;
        }
    }
}
