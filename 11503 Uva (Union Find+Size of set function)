#include<bits/stdc++.h>
using namespace std;
int p[10000000];
vector<int> s;
void init(int n)
{
    for(int i=1;i<=n;i++)
    {
        p[i]=i;
        s[i]=1;
    }
}
int findx(int x)
{
    if(p[x]==x)
    {
        return x;
    }
    return p[x]=findx(p[x]);
}
bool sameset(int a,int b)
{
    if(findx(a)==findx(b))
    {
        return true;
    }
    return false;
}
void unir(int a,int b)
{
    a=findx(a);
    b=findx(b);
    if(a!=b)
    {
        s[b]+=s[a];
        p[a]=b;
    }
}
map<string,int> ma;
int main(){
    ios::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    int t,n,m;
    string a,b;
    cin>>t;
    //cout<<t<<" CASOS"<<endl;
    for(int cs=0;cs<t;cs++){
        cin>>n;
        s.clear();
        ma.clear();
        s.resize(2*n+1);
        init(2*n+1);
        int lf=1;
        for(int i=0;i<n;i++){
            cin>>a>>b;
            if(ma.find(a)==ma.end()){
                ma[a]=lf;
                lf++;
            }
            if(ma.find(b)==ma.end()){
                ma[b]=lf;
                lf++;
            }
            unir(ma[a],ma[b]);
            /*for(int i=1;i<=2*n+1;i++){
                cout<<p[i]<<" ";
            }cout<<endl;8
            */
            int sol=0;
            int gw=findx(ma[a]);
            //cout<<"gw: "<<gw<<endl;
            /*for(int i=1;i<=2*n+1;i++){
                //cout<<findx(i)<<" ";
                if(findx(i)==gw)sol++;
            }//cout<<endl;*/
            cout<<s[gw]<<endl;
            //cout<<sol<<endl;
        }
    }
}
